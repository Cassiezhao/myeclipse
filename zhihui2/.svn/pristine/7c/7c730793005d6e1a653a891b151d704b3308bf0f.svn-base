package chris.service2;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.springframework.stereotype.Controller;

import chris.pojo.Guide;
import chris.pojo.Guidem;
import chris.service.BizService;
public class excelService {
	

	public static  InputStream exportNetworkDeviceList(List<Guide> a ) {
        HSSFWorkbook wb = new HSSFWorkbook();
        // 第二步，在webbook中添加一个sheet,对应Excel文件中的sheet
        HSSFSheet sheet = wb.createSheet("表一");
        // 第三步，在sheet中添加表头第0行,注意老版本poi对Excel的行数列数有限制short
        HSSFRow row = sheet.createRow((int) 0);
        // 第四步，创建单元格，并设置值表头 设置表头居中
        HSSFCellStyle style = wb.createCellStyle();
        style.setAlignment(HSSFCellStyle.ALIGN_CENTER); // 创建一个居中格式

 

        //写列名，视自己的需求而定
        HSSFCell cell = row.createCell(0);
        cell.setCellValue("设备型号");
        cell.setCellStyle(style);
        cell = row.createCell(1);
        cell.setCellValue("端口数");
        cell.setCellStyle(style);
        cell = row.createCell(2);
        cell.setCellValue("设备名称");
        cell.setCellStyle(style);
        cell = row.createCell(3);
        cell.setCellValue("状态");
        cell.setCellStyle(style);
        cell = row.createCell(4);
        cell.setCellValue("楼宇");
        cell.setCellStyle(style);
        cell = row.createCell(5);
        cell.setCellValue("楼层");
        cell.setCellStyle(style);
        cell = row.createCell(6);
        cell.setCellValue("位置");
        cell.setCellStyle(style);
        cell = row.createCell(7);
        cell.setCellValue("接口");
        cell.setCellStyle(style);
        cell = row.createCell(8);
        cell.setCellValue("IP地址");
        cell.setCellStyle(style);
        cell = row.createCell(9);
        cell.setCellValue("网关");
        cell.setCellStyle(style);
        cell = row.createCell(10);
        cell.setCellValue("备注");
        cell.setCellStyle(style);
        
        
        // 第五步，写入实体数据 实际应用中这些数据从数据库得到，\
        //List<Guidem> a = bizService.getGuidemBiz().findAll2();
        for (int i = 0; i < a.size(); i++) {
            row = sheet.createRow((int) i + 1);
            //NetworkDevice netDevice = exportList.get(i);
            // 第四步，创建单元格，并设置值
            
            row.createCell(0).setCellValue(a.get(i).getAge());
            row.createCell(1).setCellValue(a.get(i).getBlood());
            row.createCell(2).setCellValue(a.get(i).getExperice());
            row.createCell(3).setCellValue(a.get(i).getGpassword());
            row.createCell(4).setCellValue(a.get(i).getGpassword());
            row.createCell(5).setCellValue(a.get(i).getGpassword());
            row.createCell(6).setCellValue(a.get(i).getGpassword());
            row.createCell(7).setCellValue(a.get(i).getGpassword());

        }
        //自动设置EXCEL的列宽，视自己的需求而定，也可以用sheet.setDefaultColumnWidth(13);为全部列的列宽设置默认值
        sheet.autoSizeColumn((short)0);
        sheet.autoSizeColumn((short)2);
        sheet.autoSizeColumn((short)6);
        sheet.autoSizeColumn((short)7);
        sheet.autoSizeColumn((short)8);
        sheet.autoSizeColumn((short)9);
        sheet.autoSizeColumn((short)10);

        //设置文件名，用格式化日期来生成一个ID
        String filePath="";
        Date dt = new Date();
        DateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");
        String date = df.format(dt).toString();
        filePath = "D:NetDevice" + date + ".xls";
        File file=new File(filePath);
        try{
            OutputStream out=new FileOutputStream(file);
            wb.write(out);
            out.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        InputStream in=null;
        try{
            in=new FileInputStream(file);
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        return in;
    }

	public static  InputStream exportNetworkDeviceList2(List<Guidem> a ) {
        HSSFWorkbook wb = new HSSFWorkbook();
        // 第二步，在webbook中添加一个sheet,对应Excel文件中的sheet
        HSSFSheet sheet = wb.createSheet("表一");
        // 第三步，在sheet中添加表头第0行,注意老版本poi对Excel的行数列数有限制short
        HSSFRow row = sheet.createRow((int) 0);
        // 第四步，创建单元格，并设置值表头 设置表头居中
        HSSFCellStyle style = wb.createCellStyle();
        style.setAlignment(HSSFCellStyle.ALIGN_CENTER); // 创建一个居中格式

 

        //写列名，视自己的需求而定
        HSSFCell cell = row.createCell(0);
        cell.setCellValue("导游机编号");
        cell.setCellStyle(style);
        cell = row.createCell(1);
        cell.setCellValue("导游编号");
        cell.setCellStyle(style);
        cell = row.createCell(2);
        cell.setCellValue("导游姓名");
        cell.setCellStyle(style);
        cell = row.createCell(3);
        cell.setCellValue("携带游客机个数");
        cell.setCellStyle(style);
        cell = row.createCell(4);
        cell.setCellValue("派单日期");
        cell.setCellStyle(style);
        
        
        // 第五步，写入实体数据 实际应用中这些数据从数据库得到，\
        //List<Guidem> a = bizService.getGuidemBiz().findAll2();
        for (int i = 0; i < a.size(); i++) {
        	if(a.get(i).getGmstate()==2){
            row = sheet.createRow((int) i + 1);
            //NetworkDevice netDevice = exportList.get(i);
            // 第四步，创建单元格，并设置值
            
            row.createCell(0).setCellValue(a.get(i).getGuidemnum());
            row.createCell(1).setCellValue(a.get(i).getGuide().getGuidenum());
            row.createCell(2).setCellValue(a.get(i).getGuide().getGuidename());
            row.createCell(3).setCellValue(a.get(i).getYoukeNum());
            row.createCell(4).setCellValue(a.get(i).getBroT());
        	}

        }
        //自动设置EXCEL的列宽，视自己的需求而定，也可以用sheet.setDefaultColumnWidth(13);为全部列的列宽设置默认值
        sheet.autoSizeColumn((short)0);
        sheet.autoSizeColumn((short)2);
        sheet.autoSizeColumn((short)6);
        sheet.autoSizeColumn((short)7);
        sheet.autoSizeColumn((short)8);
        sheet.autoSizeColumn((short)9);
        sheet.autoSizeColumn((short)10);

        //设置文件名，用格式化日期来生成一个ID
        String filePath="";
        Date dt = new Date();
        DateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");
        String date = df.format(dt).toString();
        filePath = "returnGuidem" + date + ".xls";
        File file=new File(filePath);
        try{
            OutputStream out=new FileOutputStream(file);
            wb.write(out);
            out.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        InputStream in=null;
        try{
            in=new FileInputStream(file);
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        return in;
    }
	
}
